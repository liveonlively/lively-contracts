[
  "error AccountAlreadyAllowListed()",
  "error AccountNotAllowListed()",
  "error AllowListAmountExceeded()",
  "error AllowListDisabled()",
  "error AllowListEnabled()",
  "error AllowListMintUnopened()",
  "error ArrayLengthsDiffer()",
  "error ERC1155Base__ArrayLengthMismatch()",
  "error ERC1155Base__BalanceQueryZeroAddress()",
  "error ERC1155Base__BurnExceedsBalance()",
  "error ERC1155Base__BurnFromZeroAddress()",
  "error ERC1155Base__ERC1155ReceiverNotImplemented()",
  "error ERC1155Base__ERC1155ReceiverRejected()",
  "error ERC1155Base__MintToZeroAddress()",
  "error ERC1155Base__NotOwnerOrApproved()",
  "error ERC1155Base__SelfApproval()",
  "error ERC1155Base__TransferExceedsBalance()",
  "error ERC1155Base__TransferToZeroAddress()",
  "error ERC165Base__InvalidInterfaceId()",
  "error EnumerableSet__IndexOutOfBounds()",
  "error ExceedsMaxSupply()",
  "error InvalidAmount()",
  "error InvalidMaxSupply()",
  "error InvalidMintType()",
  "error InvalidTokenID()",
  "error MintNotOpen()",
  "error NotCrossmintUSDCToken()",
  "error NotOnAllowList()",
  "error Pausable__NotPaused()",
  "error Pausable__Paused()",
  "event AllowListAdded(address account, uint256 allowance)",
  "event AllowListAdded(address[] accounts, uint256 allowance)",
  "event AllowListAdded(uint256 tokenId, address account, uint256 allowance)",
  "event AllowListAdded(uint256 tokenId, address[] accounts, uint256 allowance)",
  "event AllowListRemoved(address account)",
  "event AllowListRemoved(address[] accounts)",
  "event AllowListRemoved(uint256 tokenId, address account)",
  "event AllowListRemoved(uint256 tokenId, address[] accounts)",
  "event AllowListStatus(bool status)",
  "event AllowListStatus(uint256 tokenId, bool status)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event Paused(address account)",
  "event PaymentReceived(address from, uint256 amount)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed tokenId)",
  "event Unpaused(address account)",
  "function accountsByToken(uint256 id) view returns (address[])",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function crossmintMint(address account, uint256 id, uint256 amount)",
  "function crossmintPackMint(address account, uint256 packId, uint256 amount)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function mint(address account, uint256 id, uint256 amount, uint8 mintType)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
  "function setApprovalForAll(address operator, bool status)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function tokensByAccount(address account) view returns (uint256[])",
  "function totalHolders(uint256 id) view returns (uint256)",
  "function totalSupply(uint256 id) view returns (uint256)",
  "function uri(uint256 tokenId) view returns (string)",
  "error AccountAlreadyAllowListed()",
  "error AccountNotAllowListed()",
  "error AllowListAmountExceeded()",
  "error AllowListDisabled()",
  "error AllowListEnabled()",
  "error AllowListMintUnopened()",
  "error ArrayLengthsDiffer()",
  "error ERC1155Base__ArrayLengthMismatch()",
  "error ERC1155Base__BalanceQueryZeroAddress()",
  "error ERC1155Base__BurnExceedsBalance()",
  "error ERC1155Base__BurnFromZeroAddress()",
  "error ERC1155Base__ERC1155ReceiverNotImplemented()",
  "error ERC1155Base__ERC1155ReceiverRejected()",
  "error ERC1155Base__MintToZeroAddress()",
  "error ERC1155Base__NotOwnerOrApproved()",
  "error ERC1155Base__SelfApproval()",
  "error ERC1155Base__TransferExceedsBalance()",
  "error ERC1155Base__TransferToZeroAddress()",
  "error ERC165Base__InvalidInterfaceId()",
  "error EnumerableSet__IndexOutOfBounds()",
  "error ExceedsMaxSupply()",
  "error InvalidAmount()",
  "error InvalidMaxSupply()",
  "error InvalidMintType()",
  "error InvalidTokenID()",
  "error MintNotOpen()",
  "error NotOnAllowList()",
  "error NotOwner()",
  "error OperatorNotAllowed(address operator)",
  "error Ownable__NotOwner()",
  "error Ownable__NotTransitiveOwner()",
  "error Pausable__NotPaused()",
  "error Pausable__Paused()",
  "event AllowListAdded(address account, uint256 allowance)",
  "event AllowListAdded(address[] accounts, uint256 allowance)",
  "event AllowListAdded(uint256 tokenId, address account, uint256 allowance)",
  "event AllowListAdded(uint256 tokenId, address[] accounts, uint256 allowance)",
  "event AllowListRemoved(address account)",
  "event AllowListRemoved(address[] accounts)",
  "event AllowListRemoved(uint256 tokenId, address account)",
  "event AllowListRemoved(uint256 tokenId, address[] accounts)",
  "event AllowListStatus(bool status)",
  "event AllowListStatus(uint256 tokenId, bool status)",
  "event ApprovalForAll(address indexed account, address indexed operator, bool approved)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Paused(address account)",
  "event PaymentReceived(address from, uint256 amount)",
  "event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values)",
  "event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value)",
  "event URI(string value, uint256 indexed tokenId)",
  "event Unpaused(address account)",
  "function OPERATOR_FILTER_REGISTRY() view returns (address)",
  "function accountsByToken(uint256 id) view returns (address[])",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function batchCreate(uint256 _amount, tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC) _tokenData) returns (bool success)",
  "function batchCreate(tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC)[] _tokenData) returns (bool success)",
  "function burn(address account, uint256 id, uint256 amount)",
  "function create(tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC) _tokenData) returns (uint256 _id)",
  "function exists(uint256 _tokenId) view returns (bool)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function maxSupply(uint256 _id) view returns (uint256)",
  "function mint(address account, uint256 id, uint256 amount) payable",
  "function mint(address[] accounts, uint256 id, uint256 amount)",
  "function name() view returns (string)",
  "function packCreate(uint256[] _tokenIds, uint256 _price, uint256 _startTime)",
  "function packMint(address account, uint256 packId, uint256 amount) payable",
  "function packPrice(uint256 _packId) view returns (uint256)",
  "function packStartTime(uint256 _packId) view returns (uint256)",
  "function packTokenIds(uint256 _packId) view returns (uint256[])",
  "function price(uint256 _id) view returns (uint256)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
  "function setApprovalForAll(address operator, bool status)",
  "function setMaxSupply(uint256 _id, uint256 _maxSupply)",
  "function setName(string _name)",
  "function setPrice(uint256 _id, uint256 _price)",
  "function setStartTime(uint256 _id, uint256 _startTime)",
  "function setSymbol(string _symbol)",
  "function setTokenData(uint256 _id, tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC) _tokenData)",
  "function startTime(uint256 _id) view returns (uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function tokenData(uint256 id) view returns (tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC))",
  "function tokensByAccount(address account) view returns (uint256[])",
  "function totalHolders(uint256 id) view returns (uint256)",
  "function totalSupply(uint256 id) view returns (uint256)",
  "function uri(uint256 tokenId) view returns (string)",
  "function helloWorld() pure returns (string)",
  "error ArrayLengthsDiffer()",
  "error ExceedsMaxSupply()",
  "error InvalidAmount()",
  "error InvalidMaxSupply()",
  "error InvalidMintType()",
  "error InvalidTokenID()",
  "event PaymentReceived(address from, uint256 amount)",
  "function OPERATOR_FILTER_REGISTRY() view returns (address)",
  "function __transitiveOwner() view returns (address)",
  "function accountsByToken(uint256 id) view returns (address[])",
  "function addPayee(address account, uint256 shares_)",
  "function addToAllowList(uint256 tokenId, address account)",
  "function addToAllowList(uint256 tokenId, address[] accounts, uint256 allowance)",
  "function addToAllowList(uint256 tokenId, address account, uint256 allowance, uint256 allowTime)",
  "function addToAllowList(uint256 tokenId, address[] accounts)",
  "function addToAllowList(uint256 tokenId, address account, uint256 allowance)",
  "function addToAllowList(uint256 tokenId, address[] accounts, uint256 allowance, uint256 allowTime)",
  "function allowList(uint256 _tokenId) view returns (tuple(address account, uint256 allowance)[] allowListMap)",
  "function allowListContains(uint256 tokenId, address account) view returns (bool contains)",
  "function allowListEnabled(uint256 _tokenId) view returns (bool enabled)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function batchCreate(uint256 _amount, tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC) _tokenData) returns (bool success)",
  "function batchCreate(tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC)[] _tokenData) returns (bool success)",
  "function burn(address account, uint256 id, uint256 amount)",
  "function contractURI() view returns (string)",
  "function create(tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC) _tokenData) returns (uint256 _id)",
  "function crossmintMint(address account, uint256 id, uint256 amount)",
  "function crossmintPackMint(address account, uint256 packId, uint256 amount)",
  "function diamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "function disableAllowList(uint256 _tokenId)",
  "function enableAllowList(uint256 _tokenId)",
  "function exists(uint256 _tokenId) view returns (bool)",
  "function facetAddress(bytes4 _functionSelector) view returns (address facetAddress_)",
  "function facetAddresses() view returns (address[] facetAddresses_)",
  "function facetFunctionSelectors(address _facet) view returns (bytes4[] _facetFunctionSelectors)",
  "function facets() view returns (tuple(address facetAddress, bytes4[] functionSelectors)[] facets_)",
  "function implementation() view returns (address)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function maxSupply(uint256 _id) view returns (uint256)",
  "function mint(address account, uint256 id, uint256 amount) payable",
  "function mint(address[] accounts, uint256 id, uint256 amount)",
  "function mint(address account, uint256 id, uint256 amount, uint8 mintType)",
  "function name() view returns (string)",
  "function owner() view returns (address)",
  "function packCreate(uint256[] _tokenIds, uint256 _price, uint256 _startTime)",
  "function packMint(address account, uint256 packId, uint256 amount) payable",
  "function packPrice(uint256 _packId) view returns (uint256)",
  "function packStartTime(uint256 _packId) view returns (uint256)",
  "function packTokenIds(uint256 _packId) view returns (uint256[])",
  "function pause()",
  "function paused() view returns (bool)",
  "function payee(uint256 index) view returns (address)",
  "function price(uint256 _id) view returns (uint256)",
  "function releasable(address account) view returns (uint256)",
  "function releasable(address token, address account) view returns (uint256)",
  "function release(address account)",
  "function release(address token, address account)",
  "function released(address token, address account) view returns (uint256)",
  "function released(address account) view returns (uint256)",
  "function removeFromAllowList(uint256 tokenId, address account)",
  "function removeFromAllowList(uint256 tokenId, address[] accounts)",
  "function royaltyInfo(uint256 tokenId, uint256 salePrice) view returns (address, uint256)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
  "function setApprovalForAll(address operator, bool status)",
  "function setDefaultRoyalty(uint16 _defaultRoyaltyBPS, address _defaultRoyalyReceiver)",
  "function setDummyImplementation(address _implementation)",
  "function setMaxSupply(uint256 _id, uint256 _maxSupply)",
  "function setName(string _name)",
  "function setPrice(uint256 _id, uint256 _price)",
  "function setStartTime(uint256 _id, uint256 _startTime)",
  "function setSymbol(string _symbol)",
  "function setTokenData(uint256 _id, tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC) _tokenData)",
  "function shares(address account) view returns (uint256)",
  "function startTime(uint256 _id) view returns (uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function tokenData(uint256 id) view returns (tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC))",
  "function tokensByAccount(address account) view returns (uint256[])",
  "function totalHolders(uint256 id) view returns (uint256)",
  "function totalReleased(address token) view returns (uint256)",
  "function totalReleased() view returns (uint256)",
  "function totalShares() view returns (uint256)",
  "function totalSupply(uint256 id) view returns (uint256)",
  "function transferOwnership(address account)",
  "function unpause()",
  "function updatePaymentSplitterAddress(address _newPayee) returns (bool success)",
  "function uri(uint256 tokenId) view returns (string)",
  "error AccountAlreadyAllowListed()",
  "error AccountNotAllowListed()",
  "error AllowListAmountExceeded()",
  "error AllowListDisabled()",
  "error AllowListEnabled()",
  "error AllowListMintUnopened()",
  "error EnumerableSet__IndexOutOfBounds()",
  "error MintNotOpen()",
  "error NotOnAllowList()",
  "error Ownable__NotOwner()",
  "error Ownable__NotTransitiveOwner()",
  "event AllowListAdded(address account, uint256 allowance)",
  "event AllowListAdded(address[] accounts, uint256 allowance)",
  "event AllowListAdded(uint256 tokenId, address account, uint256 allowance)",
  "event AllowListAdded(uint256 tokenId, address[] accounts, uint256 allowance)",
  "event AllowListRemoved(address account)",
  "event AllowListRemoved(address[] accounts)",
  "event AllowListRemoved(uint256 tokenId, address account)",
  "event AllowListRemoved(uint256 tokenId, address[] accounts)",
  "event AllowListStatus(bool status)",
  "event AllowListStatus(uint256 tokenId, bool status)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function addToAllowList(uint256 tokenId, address account)",
  "function addToAllowList(uint256 tokenId, address[] accounts, uint256 allowance)",
  "function addToAllowList(uint256 tokenId, address account, uint256 allowance, uint256 allowTime)",
  "function addToAllowList(uint256 tokenId, address[] accounts)",
  "function addToAllowList(uint256 tokenId, address account, uint256 allowance)",
  "function addToAllowList(uint256 tokenId, address[] accounts, uint256 allowance, uint256 allowTime)",
  "function allowList(uint256 _tokenId) view returns (tuple(address account, uint256 allowance)[] allowListMap)",
  "function allowListContains(uint256 tokenId, address account) view returns (bool contains)",
  "function allowListEnabled(uint256 _tokenId) view returns (bool enabled)",
  "function disableAllowList(uint256 _tokenId)",
  "function enableAllowList(uint256 _tokenId)",
  "function removeFromAllowList(uint256 tokenId, address account)",
  "function removeFromAllowList(uint256 tokenId, address[] accounts)",
  "error InitializationFunctionReverted(address _initializationContractAddress, bytes _calldata)",
  "error Ownable__NotOwner()",
  "error Ownable__NotTransitiveOwner()",
  "event DiamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function diamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "error Ownable__NotOwner()",
  "error Ownable__NotTransitiveOwner()",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function implementation() view returns (address)",
  "function setDummyImplementation(address _implementation)",
  "error ERC165Base__InvalidInterfaceId()",
  "function facetAddress(bytes4 _functionSelector) view returns (address facetAddress_)",
  "function facetAddresses() view returns (address[] facetAddresses_)",
  "function facetFunctionSelectors(address _facet) view returns (bytes4[] _facetFunctionSelectors)",
  "function facets() view returns (tuple(address facetAddress, bytes4[] functionSelectors)[] facets_)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error Ownable__NotOwner()",
  "error Ownable__NotTransitiveOwner()",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function __transitiveOwner() view returns (address)",
  "function owner() view returns (address)",
  "function transferOwnership(address account)",
  "error Ownable__NotOwner()",
  "error Ownable__NotTransitiveOwner()",
  "error Pausable__NotPaused()",
  "error Pausable__Paused()",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Paused(address account)",
  "event Unpaused(address account)",
  "function pause()",
  "function paused() view returns (bool status)",
  "function unpause()",
  "error InvalidPayee()",
  "error Ownable__NotOwner()",
  "error Ownable__NotTransitiveOwner()",
  "error PayeeNotSender()",
  "error PaymentSplitterAlreadyHasShares()",
  "error PaymentSplitterMismatch()",
  "error PaymentSplitterNoPayees()",
  "error PaymentSplitterZeroAddress()",
  "error PaymentSplitterZeroFundsDue()",
  "error PaymentSplitterZeroShares()",
  "event ERC20PaymentReleased(address indexed token, address to, uint256 amount)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event PayeeAdded(address account, uint256 shares)",
  "event PaymentReceived(address from, uint256 amount)",
  "event PaymentReleased(address to, uint256 amount)",
  "function addPayee(address account, uint256 shares_)",
  "function automaticUSDConversion() view returns (bool)",
  "function isPriceUSD() view returns (bool)",
  "function payee(uint256 index) view returns (address)",
  "function releasable(address account) view returns (uint256)",
  "function releasable(address token, address account) view returns (uint256)",
  "function release(address account)",
  "function release(address token, address account)",
  "function released(address token, address account) view returns (uint256)",
  "function released(address account) view returns (uint256)",
  "function shares(address account) view returns (uint256)",
  "function totalReleased(address token) view returns (uint256)",
  "function totalReleased() view returns (uint256)",
  "function totalShares() view returns (uint256)",
  "function updatePaymentSplitterAddress(address _newPayee) returns (bool success)",
  "error Ownable__NotOwner()",
  "error Ownable__NotTransitiveOwner()",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function contractURI() view returns (string)",
  "function royaltyInfo(uint256 tokenId, uint256 salePrice) view returns (address, uint256)",
  "function setDefaultRoyalty(uint16 _defaultRoyaltyBPS, address _defaultRoyalyReceiver)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)"
]
