[
  "error AccountAlreadyAllowListed()",
  "error AccountNotAllowListed()",
  "error AllowListAmountExceeded()",
  "error AllowListDisabled()",
  "error AllowListEnabled()",
  "error AllowListMintUnopened()",
  "error ApprovalCallerNotOwnerNorApproved()",
  "error ApprovalQueryForNonexistentToken()",
  "error BalanceQueryForZeroAddress()",
  "error EditionsEnabled()",
  "error ExceedsMaxMintPerAddress()",
  "error ExceedsMaxMintPerTx()",
  "error ExceedsMaxSupply()",
  "error InvalidAirdropCaller()",
  "error InvalidMerkleProof()",
  "error InvalidValueSent()",
  "error MintERC2309QuantityExceedsLimit()",
  "error MintNotOpen()",
  "error MintToZeroAddress()",
  "error MintZeroQuantity()",
  "error NotOnAllowList()",
  "error Ownable__NotOwner()",
  "error Ownable__NotTransitiveOwner()",
  "error OwnerQueryForNonexistentToken()",
  "error OwnerQueryForNonexistentToken()",
  "error OwnershipNotInitializedForExtraData()",
  "error Pausable__NotPaused()",
  "error Pausable__Paused()",
  "error TokenIsSoulbound()",
  "error TransferCallerNotOwnerNorApproved()",
  "error TransferFromIncorrectOwner()",
  "error TransferToNonERC721ReceiverImplementer()",
  "error TransferToZeroAddress()",
  "error URIQueryForNonexistentToken()",
  "event AllowListAdded(address account, uint256 allowance)",
  "event AllowListAdded(address[] accounts, uint256 allowance)",
  "event AllowListAdded(uint256 tokenId, address account, uint256 allowance)",
  "event AllowListAdded(uint256 tokenId, address[] accounts, uint256 allowance)",
  "event AllowListRemoved(address account)",
  "event AllowListRemoved(address[] accounts)",
  "event AllowListRemoved(uint256 tokenId, address account)",
  "event AllowListRemoved(uint256 tokenId, address[] accounts)",
  "event AllowListStatus(bool status)",
  "event AllowListStatus(uint256 tokenId, bool status)",
  "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
  "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
  "event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Paused(address account)",
  "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
  "event Unpaused(address account)",
  "function airdrop() view returns (bool)",
  "function approve(address to, uint256 tokenId)",
  "function balanceOf(address owner) view returns (uint256)",
  "function burn(uint256 tokenId)",
  "function getApproved(uint256 tokenId) view returns (address)",
  "function isApprovedForAll(address owner, address operator) view returns (bool)",
  "function isSoulbound() view returns (bool)",
  "function maxMintPerAddress() view returns (uint256)",
  "function maxMintPerTx() view returns (uint256)",
  "function maxSupply() view returns (uint256)",
  "function mint(address to, uint256 amount) payable",
  "function mint(address to) payable",
  "function name() view returns (string)",
  "function ownerOf(uint256 tokenId) view returns (address)",
  "function price() view returns (uint256)",
  "function safeTransferFrom(address from, address to, uint256 tokenId)",
  "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
  "function setAirdrop(bool _airdrop)",
  "function setApprovalForAll(address operator, bool approved)",
  "function setAutomaticUSDConversion(bool _automaticUSDConversion)",
  "function setIsPriceUSD(bool _isPriceUSD)",
  "function setMaxMintPerAddress(uint256 _maxMintPerAddress)",
  "function setMaxMintPerTx(uint256 _maxMintPerTx)",
  "function setMaxSupply(uint256 _maxSupply)",
  "function setName(string _name)",
  "function setPrice(uint256 _price)",
  "function setSoulbound(bool _isSoulbound)",
  "function setSymbol(string _symbol)",
  "function setTokenURI(string tokenURI)",
  "function symbol() view returns (string)",
  "function tokenURI(uint256 tokenId) view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transferFrom(address from, address to, uint256 tokenId)"
]
