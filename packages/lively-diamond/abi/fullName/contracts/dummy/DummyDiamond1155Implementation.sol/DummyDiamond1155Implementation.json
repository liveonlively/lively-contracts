[
  "function OPERATOR_FILTER_REGISTRY() view returns (address)",
  "function __transitiveOwner() view returns (address)",
  "function accountsByToken(uint256 id) view returns (address[])",
  "function addPayee(address account, uint256 shares_)",
  "function addToAllowList(uint256 tokenId, address account)",
  "function addToAllowList(uint256 tokenId, address[] accounts, uint256 allowance)",
  "function addToAllowList(uint256 tokenId, address account, uint256 allowance, uint256 allowTime)",
  "function addToAllowList(uint256 tokenId, address[] accounts)",
  "function addToAllowList(uint256 tokenId, address account, uint256 allowance)",
  "function addToAllowList(uint256 tokenId, address[] accounts, uint256 allowance, uint256 allowTime)",
  "function allowList(uint256 _tokenId) view returns (tuple(address account, uint256 allowance)[] allowListMap)",
  "function allowListContains(uint256 tokenId, address account) view returns (bool contains)",
  "function allowListEnabled(uint256 _tokenId) view returns (bool enabled)",
  "function balanceOf(address account, uint256 id) view returns (uint256)",
  "function balanceOfBatch(address[] accounts, uint256[] ids) view returns (uint256[])",
  "function batchCreate(uint256 _amount, tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC) _tokenData) returns (bool success)",
  "function batchCreate(tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC)[] _tokenData) returns (bool success)",
  "function burn(address account, uint256 id, uint256 amount)",
  "function contractURI() view returns (string)",
  "function create(tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC) _tokenData) returns (uint256 _id)",
  "function crossmintMint(address account, uint256 id, uint256 amount)",
  "function crossmintPackMint(address account, uint256 packId, uint256 amount)",
  "function diamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "function disableAllowList(uint256 _tokenId)",
  "function enableAllowList(uint256 _tokenId)",
  "function exists(uint256 _tokenId) view returns (bool)",
  "function facetAddress(bytes4 _functionSelector) view returns (address facetAddress_)",
  "function facetAddresses() view returns (address[] facetAddresses_)",
  "function facetFunctionSelectors(address _facet) view returns (bytes4[] _facetFunctionSelectors)",
  "function facets() view returns (tuple(address facetAddress, bytes4[] functionSelectors)[] facets_)",
  "function implementation() view returns (address)",
  "function isApprovedForAll(address account, address operator) view returns (bool)",
  "function maxSupply(uint256 _id) view returns (uint256)",
  "function mint(address account, uint256 id, uint256 amount) payable",
  "function mint(address[] accounts, uint256 id, uint256 amount)",
  "function mint(address account, uint256 id, uint256 amount, uint8 mintType)",
  "function name() view returns (string)",
  "function owner() view returns (address)",
  "function packCreate(uint256[] _tokenIds, uint256 _price, uint256 _startTime)",
  "function packMint(address account, uint256 packId, uint256 amount) payable",
  "function packPrice(uint256 _packId) view returns (uint256)",
  "function packStartTime(uint256 _packId) view returns (uint256)",
  "function packTokenIds(uint256 _packId) view returns (uint256[])",
  "function pause()",
  "function paused() view returns (bool)",
  "function payee(uint256 index) view returns (address)",
  "function price(uint256 _id) view returns (uint256)",
  "function releasable(address account) view returns (uint256)",
  "function releasable(address token, address account) view returns (uint256)",
  "function release(address account)",
  "function release(address token, address account)",
  "function released(address token, address account) view returns (uint256)",
  "function released(address account) view returns (uint256)",
  "function removeFromAllowList(uint256 tokenId, address account)",
  "function removeFromAllowList(uint256 tokenId, address[] accounts)",
  "function royaltyInfo(uint256 tokenId, uint256 salePrice) view returns (address, uint256)",
  "function safeBatchTransferFrom(address from, address to, uint256[] ids, uint256[] amounts, bytes data)",
  "function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)",
  "function setApprovalForAll(address operator, bool status)",
  "function setDefaultRoyalty(uint16 _defaultRoyaltyBPS, address _defaultRoyalyReceiver)",
  "function setDummyImplementation(address _implementation)",
  "function setMaxSupply(uint256 _id, uint256 _maxSupply)",
  "function setName(string _name)",
  "function setPrice(uint256 _id, uint256 _price)",
  "function setStartTime(uint256 _id, uint256 _startTime)",
  "function setSymbol(string _symbol)",
  "function setTokenData(uint256 _id, tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC) _tokenData)",
  "function shares(address account) view returns (uint256)",
  "function startTime(uint256 _id) view returns (uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function tokenData(uint256 id) view returns (tuple(uint256 maxSupply, uint256 price, address creator, string tokenUri, bool allowListEnabled, uint256 startTime, bool isCrossmintUSDC))",
  "function tokensByAccount(address account) view returns (uint256[])",
  "function totalHolders(uint256 id) view returns (uint256)",
  "function totalReleased(address token) view returns (uint256)",
  "function totalReleased() view returns (uint256)",
  "function totalShares() view returns (uint256)",
  "function totalSupply(uint256 id) view returns (uint256)",
  "function transferOwnership(address account)",
  "function unpause()",
  "function updatePaymentSplitterAddress(address _newPayee) returns (bool success)",
  "function uri(uint256 tokenId) view returns (string)"
]
